# -*- coding: utf-8 -*-
"""
Задание 4.8

Преобразовать IP-адрес в переменной ip в двоичный формат и вывести на стандартный
поток вывода вывод столбцами, таким образом:
- первой строкой должны идти десятичные значения байтов
- второй строкой двоичные значения

Вывод должен быть упорядочен также, как в примере:
- столбцами
- ширина столбца 10 символов (в двоичном формате
  надо добавить два пробела между столбцами
  для разделения октетов между собой)

Пример вывода для адреса 10.1.1.1:
10        1         1         1
00001010  00000001  00000001  00000001

Ограничение: Все задания надо выполнять используя только пройденные темы.

Предупреждение: в разделе 4 тесты можно легко "обмануть" сделав нужный вывод,
без получения результатов из исходных данных с помощью Python.
Это не значит, что задание сделано правильно, просто на данном этапе сложно иначе
проверять результат.
"""

ip = "192.168.3.1"

ip = ip.split('.')
#переводим элементы списка из str в int
ip_int = ([
    int(ip[0]),
    int(ip[1]),
    int(ip[2]),
    int(ip[3]),
    ])

#{0:<10b}
# 0  = номер аргумента в .format
# <  = выравнивание по левому краю
# 10 = выделяем кол-во символов для данных
# b  = перевод в bin(2)
result = '''
{0:<10}{1:<10}{2:<10}{3:<10}
{0:<10b}{1:<10b}{2:<10b}{3:<10b}
'''

print(result.format(ip_int[0], ip_int[1], ip_int[2], ip_int[3]))



"""
    Доп.решение через f
    In [9]: oct1, oct2, oct3, oct4 = [10, 1, 1, 1]
    
    In [10]: print(f'''
        ...: IP address:
        ...: {oct1:<8} {oct2:<8} {oct3:<8} {oct4:<8}
        ...: {oct1:08b} {oct2:08b} {oct3:08b} {oct4:08b}''')
    
    IP address:
    10       1        1        1
    00001010 00000001 00000001 00000001
    
"""